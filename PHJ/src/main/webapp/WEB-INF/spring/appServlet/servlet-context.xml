<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:beans="http://www.springframework.org/schema/beans"
   xmlns:context="http://www.springframework.org/schema/context"
   xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
      http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

   <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
   
   <!-- Enables the Spring MVC @Controller programming model -->
   <annotation-driven />

   <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
   <resources mapping="/resources/**" location="/resources/" />
   <resources mapping="/admin/**" location="/resources/admin/" />
   <resources mapping="/assets/**" location="/resources/assets/" />
   <resources mapping="/images/**" location="/resources/images/" />
   <resources mapping="/summernote/**" location="/WEB-INF/views/summernote/" />
	
   <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
   <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
      <beans:property name="prefix" value="/WEB-INF/views/" />
      <beans:property name="suffix" value=".jsp" />
   </beans:bean>
   
   <context:component-scan base-package="com.kosmo.phj" />
   		

   
   <!-- Spring JDBC를 사용하기 위한 빈 생성.
   해당 XML파일에서 JDBC연결에 대한 빈을 생성한 후 컨트롤러에서 자동 주입(Injection)받아서 사용한다. -->
   <beans:bean name="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
      <beans:property name="driverClassName" value="oracle.jdbc.OracleDriver"/>
      <beans:property name="url" value="jdbc:oracle:thin:@192.168.219.128:1521:orcl"/>
      <beans:property name="username" value="kosmo"/>
      <beans:property name="password" value="1234"/>
   </beans:bean>
   <beans:bean name="template" class="org.springframework.jdbc.core.JdbcTemplate">
      <beans:property name="dataSource" ref="dataSource" />
   </beans:bean>
   
   <!-- 파일 업로드 빈 생성 -->
   <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> 
         <beans:property name="maxUploadSize" value="1000000"/>
    </beans:bean>
    
    <!-- 네이버 SMTP 사용 : 본인 네이버 비번으로 변경 -->
	<beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl"> 
		<beans:property name="username" value="pwyank10321" />
		<beans:property name="password" value="vusglwja51" />

		<beans:property name="javaMailProperties">  
			<beans:props> 
				<beans:prop key="mail.smtp.host">smtp.naver.com</beans:prop> 
				<beans:prop key="mail.smtp.port">465</beans:prop> 
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
				<beans:prop key="mail.smtp.auth">true</beans:prop> 
				<beans:prop key="mail.smtp.debug">true</beans:prop> 
				<beans:prop key="mail.smtp.socketFactory.port">465</beans:prop> 
				<beans:prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</beans:prop> 
				<beans:prop key="mail.smtp.socketFactory.fallback">false</beans:prop> 
			</beans:props> 
		</beans:property> 
	</beans:bean>
   
</beans:beans>